% Takes in a nifti file and outputs the qEASL segmentation, VOI chosen and qEASL values 
uiwait(msgbox(['This program performs qEASL with automatic selection '...
    'of the parenchyma volume of interest (also known as qEASLy). '...
    'It requires registered pre-contrast and arterial phase abdominal '...
    'MRIs (in nifti format) along with the whole liver and tumor masks '...
    '(in .ids format). It outputs a mask of the enhancing tumor '...
    'as well as its volume in cubic cm. The program will '...
    'ask you to select a patient folder to look for the MRIs/masks in. '...
    'If the program is unable to detect them automatically, it will prompt'], 'qEASLy utility', 'modal'));
addpath(genpath('./utils'));

% input = questdlg(['This program performs qEASL with automatic selection '...
%     'of the parenchyma volume of interest (also known as qEASLy). '...
%     'It requires registered pre-contrast and arterial phase abdominal '...
%     'MRIs (in nifti format) along with the whole liver and tumor masks '...
%     '(in .ids format). It outputs a mask of the enhancing tumor '...
%     'as well as its volume in cubic cm. Does the image need to be downloaded from ISD?']);

% if strcmpi(input, 'Cancel')
%     return
%     
% elseif strcmpi(input, 'Yes')
%     [volDat, volLabels, jsonVolInfo] = read_ISD_series();
%     save('volDat.mat', 'volDat')
%     save('volLabels.mat', 'volLabels')
%     save('volLabels.mat', 'jsonVolInfo')
%     
% %     [tumor_volume, std_median_enh_vol] = get_enhance_vol(data.pre,...
% %             data.art, data.tumor_mask, data.dim, roi_mode, median_std, 1,...
% %             strcat(patient_id, '_median'), slice);
%         
%     % Export the enhancing tumor mask to ISD
%     % The parenchyma VOI mask is not exported
%     export_ISD_series(data)
%     
% else
search_path = uigetdir('', 'Select patient folder to search in');
data = load_nifti_liver(search_path);
% Run qEASLy.
[roi_mode, median_std] = qeasly_func(data.art, data.pre, data.liver_mask);
% Get enhancing tumor volume
[tumor_volume, std_median_enh_vol, enh_mask] = get_enhance_vol(data.pre,...
    data.art, data.tumor_mask, data.dim, roi_mode, median_std, 0,...
    'output', int8(length(data.art(1,1,:)) / 2));
% Save mask
make_ids_mask(enh_mask);
% Print results to screen.
disp([num2str(std_median_enh_vol), 'cm^3 enhancing tumor / ',...
    num2str(tumor_volume), 'cm^3 total tumor']);
fclose('all');
% end